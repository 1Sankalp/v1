"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./app/lib/auth.config.ts":
/*!********************************!*\
  !*** ./app/lib/auth.config.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authConfig: () => (/* binding */ authConfig)\n/* harmony export */ });\n/* harmony import */ var _auth_core_providers_github__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core/providers/github */ \"(middleware)/./node_modules/@auth/core/providers/github.js\");\n/* harmony import */ var _auth_core_providers_google__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @auth/core/providers/google */ \"(middleware)/./node_modules/@auth/core/providers/google.js\");\n/* harmony import */ var _auth_core_providers_credentials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @auth/core/providers/credentials */ \"(middleware)/./node_modules/@auth/core/providers/credentials.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @supabase/supabase-js */ \"(middleware)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"(middleware)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_5__.createClient)(\"https://jznlgabssuvtmkikdixz.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY);\nconst authConfig = {\n    pages: {\n        signIn: \"/login\",\n        verifyRequest: \"/verify-request\",\n        error: \"/auth/error\"\n    },\n    providers: [\n        (0,_auth_core_providers_github__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            clientId: process.env.GITHUB_ID,\n            clientSecret: process.env.GITHUB_SECRET\n        }),\n        (0,_auth_core_providers_google__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            clientId: process.env.GOOGLE_ID,\n            clientSecret: process.env.GOOGLE_SECRET\n        }),\n        (0,_auth_core_providers_credentials__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                },\n                username: {\n                    label: \"Username\",\n                    type: \"text\"\n                },\n                isSignup: {\n                    label: \"Is Signup\",\n                    type: \"boolean\"\n                }\n            },\n            async authorize (credentials) {\n                const { email, password, username, isSignup } = credentials;\n                if (!email || !password) {\n                    throw new Error(\"Invalid credentials\");\n                }\n                if (isSignup && !username) {\n                    throw new Error(\"Username is required for signup\");\n                }\n                try {\n                    if (isSignup) {\n                        // Check if user already exists\n                        const { data: existingUser } = await supabase.from(\"users\").select(\"id\").or(`email.eq.${email.toLowerCase()},username.eq.${username.toLowerCase()}`).single();\n                        if (existingUser) {\n                            throw new Error(\"User already exists\");\n                        }\n                        const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].hash(password, 10);\n                        const userId = crypto__WEBPACK_IMPORTED_MODULE_4___default().randomUUID();\n                        // Create new user with minimal fields\n                        const { data: newUser, error: createError } = await supabase.from(\"users\").insert({\n                            id: userId,\n                            email: email.toLowerCase(),\n                            username: username.toLowerCase(),\n                            hashed_password: hashedPassword // Using hashed_password instead of password\n                        }).select(\"id, email, username\").single();\n                        if (createError) {\n                            console.error(\"Create user error:\", createError);\n                            throw new Error(createError.message);\n                        }\n                        return {\n                            id: newUser.id,\n                            email: newUser.email,\n                            username: newUser.username\n                        };\n                    }\n                    // Handle sign in\n                    const { data: user, error } = await supabase.from(\"users\").select(\"id, email, username, hashed_password\") // Using hashed_password\n                    .eq(\"email\", email.toLowerCase()).single();\n                    if (error || !user) {\n                        throw new Error(\"User not found\");\n                    }\n                    const isValidPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].compare(password, user.hashed_password || \"\");\n                    if (!isValidPassword) {\n                        throw new Error(\"Invalid password\");\n                    }\n                    // Return user without password\n                    const { hashed_password: _, ...userWithoutPassword } = user;\n                    return userWithoutPassword;\n                } catch (error) {\n                    console.error(\"Auth error:\", error);\n                    throw error;\n                }\n            }\n        })\n    ],\n    callbacks: {\n        async jwt ({ token, user, trigger, session }) {\n            if (trigger === \"update\" && session) {\n                return {\n                    ...token,\n                    ...session.user\n                };\n            }\n            if (user) {\n                token.id = user.id;\n                token.username = user.username;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (token) {\n                session.user.id = token.id;\n                session.user.username = token.username;\n            }\n            return session;\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./app/lib/auth.config.ts\n");

/***/ })

});